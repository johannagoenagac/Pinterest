{"version":3,"sources":["Components/Image.js","Components/Navbar.js","Components/Modal.js","App.js","serviceWorker.js","index.js"],"names":["Image","props","react_default","a","createElement","onClick","doClick","url","id","src","alt","Navbar","className","class","type","placeholder","Modal","event","target","getAttribute","closeModal","Components_Navbar","seeImg","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","loadingFunction","charge","state","page","setState","objectSpread","fetch","then","data","json","dataArr","results","concat","console","log","modal","openModal","bind","assertThisInitialized","imag","apiResult","_this2","_this3","map","item","Components_Image","urls","thumb","Components_Modal","showPhotos","lib_default","dataLength","length","next","hasMore","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d95edb2c.chunk.js","sourcesContent":["import React from 'react';\nimport './Image.css';\n\nfunction Image(props) {\n\n    return (\n            <img onClick={()=>props.doClick(props.url)} id=\"imgCard\" src={props.url} alt=\"imgApi\"></img>\n    )\n\n\n}\n\nexport default Image;\n\n\n\n/* //  <div className=\"col l3\">\n//  <img id=\"imgCard\" src={props.url} alt=\"Img\"></img>\n//         <div className=\"container\">\n//      <h4><b>John Doe</b></h4>\n//      <p>Architect & Engineer</p>\n//      </div>\n//     </div> */\n\n","import React from 'react';\nimport './Navbar.css';\n\n\nfunction Navbar() {\n\n\n    return (\n        <div className=\"container\">\n            <navbar className=\"fixed-navbar\">\n            \n            <ul className=\"listNavbar\">\n                    <li><i class=\"fab fa-pinterest\"></i></li>\n                    <li><input className=\"search\" type=\"search\" placeholder=\"Buscar\"/></li>\n                    <li>Inicio</li>\n                    <li>Siguiendo</li>\n                    <li><i class=\"fab fa-adn\"></i>  Almendra</li>\n                    <li><i class=\"fas fa-comment-dots\"></i></li>\n                    <li><i class=\"fas fa-bell\"></i></li>\n                </ul>\n            </navbar>\n        </div>\n    )\n\n}\n\nexport default Navbar;","import React from 'react';\nimport './Modal.css';\nimport Navbar from './Navbar';\n\n\nfunction Modal(props) {\n    return (\n\n\n        <div className=\"fatherModal\" onClick={(event) => {\n            if (event.target.getAttribute(\"class\") === \"fatherModal\") {\n                props.closeModal()\n            }\n        }}>\n            <Navbar />\n\n            <div className=\"childModal\">\n\n                <header>\n\n                    <div id=\"menu\">\n                        <i class=\"fas fa-ellipsis-h\"></i>\n                    </div>\n\n                    <div id=\"btnes-modal\">\n                        <button id=\"btn-send\" type=\"button\"><i class=\"fas fa-upload\"></i> Enviar</button>\n                        <button id=\"btn-save\" type=\"button\"><i class=\"fas fa-thumbtack\"></i> Guardar</button>\n                    </div>\n                </header>\n\n                <div className=\"modal-img\">\n                    <img id=\"imgModal\" src={props.seeImg} alt=\"imgApi\" />\n                </div>\n\n\n                <div id=\"text\">\n\n                    <hr id=\"firstLine\" />\n\n                    <h4 id=\"title\">Fotos y comentarios</h4>\n\n                    <button id=\"btnPhoto\">Fotos</button>\n                    <button id=\"btnComments\">Comentarios</button>\n\n                    <div id=\"add\">\n                        <p id=\"text-content\">¿Has probado este Pin? Añade <br />\n                            una foto para mostrar cómo ha<br />\n                            ido\n                    </p>\n                        <button id=\"addBtn\">Añadir una foto</button>\n                    </div>\n                    <hr />\n\n                    <div className=\"comments\">\n\n                        <p><i class=\"fas fa-user-circle\"></i><strong> Isabela Fiorutti</strong> ha guardado en Dress<br />\n                            Vestido largo, de noche, rojo - Page 2 of 15 - <br />\n                            fashion-style.cl</p>\n                    </div>\n\n                </div>\n\n            </div>\n\n        </div>\n\n\n\n\n\n\n\n\n\n\n    )\n\n}\nexport default Modal;","import React, { Component } from 'react';\nimport './App.css';\nimport Image from './Components/Image';\nimport Navbar from './Components/Navbar';\nimport Modal from './Components/Modal';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      data:false,\n      modal: false,\n      page: 20\n    }\n\n    this.openModal=this.openModal.bind(this);\n    this.closeModal=this.closeModal.bind(this);\n  }\n\n  loadingFunction= () => {\n    let charge = this.state.page + 20;\n    this.setState({\n      ...this.state,\n      page: charge\n    })\n\n    fetch(\"https://api.unsplash.com/search/photos?page=\" + \n    (this.state.page/20)+ \"&per_page=20&query=dress&client_id=bcee26febb119737500add1650f9e0e5c3cb4812778bb598a7b2056672f49a70\")\n    .then(data=>data.json())\n    .then(data=>{\n      // console.log(data)\n    let dataArr= data.results\n    // console.log(dataArr)\n    this.setState({\n      ...this.state,\n      data: dataArr.concat(this.state.data)\n\n    })\n    console.log(dataArr.concat(this.state.data))\n  });\n\n  }\n\n\n\n  openModal(imag){\n    this.setState({\n      ...this.state,\n      modal:imag,\n    })\n\n  }\n\n  closeModal(){\n    this.setState({\n      ...this.state,\n      modal:false,\n  })\n\n}\n\ncomponentDidMount(){\n   this.apiResult();\n  }\n\napiResult(){\n  fetch(\"https://api.unsplash.com/search/photos?page=1&per_page=20&query=dress&client_id=bcee26febb119737500add1650f9e0e5c3cb4812778bb598a7b2056672f49a70\")\n    .then(data=>data.json())\n    .then(data=>{\n    let dataArr= data.results\n    console.log(dataArr)\n    this.setState({\n      ...this.state,\n      data: dataArr,\n    })\n  });\n  \n}\n\nshowPhotos(){\n  const read=this.state.data.map(item=>{\n    return(\n    <Image\n    doClick={this.openModal}\n    url={item.urls.thumb}/>\n    )\n  })\n  return read\n}\n  \n\n  render() {\n    return (\n\n      <div >\n      \n      <Navbar/>\n      \n      <div className=\"container\">\n      {this.state.modal && <Modal closeModal={this.closeModal}\n      seeImg={this.state.modal}/>}\n      {this.state.data && this.showPhotos()}\n      </div>\n      <InfiniteScroll\n  dataLength={this.showPhotos.length} //This is important field to render the next data\n  next={this.loadingFunction}\n  hasMore={true}\n  \n  >\n  {this.showPhotos}\n  </InfiniteScroll>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}